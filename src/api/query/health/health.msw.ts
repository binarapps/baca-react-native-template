/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * Generated by orval üç∫
 * Do not edit manually.
 * API
 * API documentation for the starter-kit project in NestJS by BinarApps. The API allows management of users, sessions and offers various functions for logged in users. Contains examples of authentication, authorization, and CRUD for selected resources.
 * OpenAPI spec version: 1.0
 */
import { faker } from '@faker-js/faker'
import { HttpResponse, delay, http } from 'msw'

import type { HealthEntity } from '../../types'

export const getHealthControllerCheckResponseMock = (
  overrideResponse: Partial<HealthEntity> = {}
): HealthEntity => ({
  details: {
    cache: { status: faker.word.sample() },
    db: { status: faker.word.sample() },
    domain: { status: faker.word.sample() },
  },
  error: {},
  info: {
    cache: { status: faker.word.sample() },
    db: { status: faker.word.sample() },
    domain: { status: faker.word.sample() },
  },
  status: faker.word.sample(),
  ...overrideResponse,
})

export const getHealthControllerCheckMockHandler = (
  overrideResponse?:
    | HealthEntity
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0]
      ) => Promise<HealthEntity> | HealthEntity)
) => {
  return http.get('*/api/v1/health', async (info) => {
    await delay(1000)

    return new HttpResponse(
      JSON.stringify(
        overrideResponse !== undefined
          ? typeof overrideResponse === 'function'
            ? await overrideResponse(info)
            : overrideResponse
          : getHealthControllerCheckResponseMock()
      ),
      { status: 200, headers: { 'Content-Type': 'application/json' } }
    )
  })
}
export const getHealthMock = () => [getHealthControllerCheckMockHandler()]
